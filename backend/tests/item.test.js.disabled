const { app, server } = require("../server");
const mongoose = require("mongoose");
const request = require("supertest");
const Item = require("../models/itemSchema");
const User = require("../models/userSchema");

describe("Item API Tests", () => {
  let authToken;
  let userId;

  const testUser = {
    name: "Test Seller",
    email: "seller@test.com",
    password: "password123",
    phone: "+1234567890",
  };

  const testItem = {
    title: "Test Item",
    description: "Test Description",
    price: 99.99,
    category: "Electronics",
    condition: "New",
    location: "Dhaka",
    images: ["http://example.com/image.jpg"],
  };

  beforeAll(async () => {
    const dbUri =
      process.env.TEST_DB_URI || "mongodb://localhost:27017/tradehub_test";
    await mongoose.connect(dbUri);

    const userRes = await request(app)
      .post("/api/users/register")
      .send(testUser);
    userId = userRes.body.user.id;

    const loginRes = await request(app).post("/api/users/login").send({
      email: testUser.email,
      password: testUser.password,
    });
    authToken = loginRes.body.token;
  });

  afterAll(async () => {
    await Item.deleteMany({});
    await User.deleteMany({});
    await mongoose.connection.close();
    if (server) server.close();
  });

  test("Create new item", async () => {
    const res = await request(app)
      .post("/api/items")
      .set("Authorization", `Bearer ${authToken}`)
      .send(testItem);

    expect(res.statusCode).toBe(201);
    expect(res.body).toHaveProperty("_id");
    expect(res.body.title).toBe(testItem.title);
  });

  // Implement other tests like getAllItems, getItemById, updateItem, deleteItem
});
